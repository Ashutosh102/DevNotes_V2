{"version":3,"sources":["TakeNote.js","Home.js","Trash.js","App.js","reportWebVitals.js","index.js"],"names":["TakeNote","state","actions","visible","className","type","placeholder","onClick","handleClick","value","notes","title","onChange","e","handleChangeNote","target","input","autoFocus","addToNotes","PinnedNote","removeFromNotes","removePin","pinned_id","notes_list","filter","n","id","map","item","index","src","Home","styles","style","showPopUp","inputStyle","inputStyle1","edited_note","pinNote","popUp_id","updateNote","breakpointCols","columnClassName","search","search_list","alt","showNote","Trash","trash_list","removeFromTrash","App","props","deleted_note","bind","handleSearch","trash_string","localStorage","getItem","JSON","parse","list_string","this","setState","length","note","includes","key","obj","unshift","Date","now","setItem","stringify","i","containsOnlyOneElement","display","href","to","exact","path","render","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sRAuBeA,EArBE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAUC,EAAa,yBACtC,OACI,+BAEsB,IAAlBD,EAAME,QAEN,qBAAKC,UAAU,cAAf,SACE,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,QAASL,EAAQM,YAAaJ,UAAU,UAAUK,MAAOR,EAAMS,MAAMC,MAAOC,SAAU,kBAAI,UAG5I,sBAAKR,UAAU,cAAf,UACE,uBAAOC,KAAK,OAAOI,MAAOR,EAAMS,MAAMC,MAAOL,YAAY,QAAQF,UAAU,QAAQQ,SAAU,SAACC,GAAD,OAAKX,EAAQY,iBAAiBD,EAAEE,OAAON,MAAM,YAAW,uBACrJ,uBAAOJ,KAAK,OAAOI,MAAOR,EAAMS,MAAMM,MAAOV,YAAY,iBAAiBM,SAAU,SAACC,GAAD,OAAKX,EAAQY,iBAAiBD,EAAEE,OAAON,MAAM,UAAUL,UAAU,YAAYa,UAAU,eAC3K,wBAAQV,QAASL,EAAQgB,WAAzB,yBCXRC,EAAa,SAAC,GAAyC,IAAxClB,EAAuC,EAAvCA,MAAOmB,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,UACzC,OAAGpB,EAAMqB,UAEP,sBAAKlB,UAAU,SAAf,UACE,wCACCH,EAAMsB,WAAWC,QAAO,SAAAC,GAAK,OAAOA,EAAEC,KAAOzB,EAAMqB,aAAaK,KAAI,SAACC,EAAKC,GAAN,OACrE,oBAAezB,UAAU,YAAYsB,GAAG,KAAxC,UACE,uBAAMtB,UAAU,QAAhB,UAAyBwB,EAAKjB,MAA9B,IAAqC,wBAAQP,UAAU,aAAaG,QAAS,SAAAM,GAAC,OAAEQ,EAAUO,EAAKF,KAA1D,SAA+D,qBAAKtB,UAAU,MAAM0B,IAAI,wBAC7H,sBAAM1B,UAAU,QAAhB,SAAyBwB,EAAKZ,QAC9B,wBAAQZ,UAAU,cAAcG,QAAS,SAAAM,GAAC,OAAEO,EAAgBS,EAAMD,EAAKF,KAAvE,sBAHMG,MAMR,0BAKO,MAiCAE,EA9BF,SAAC,GAAiC,IAAhC9B,EAA+B,EAA/BA,MAAO+B,EAAwB,EAAxBA,OAAW9B,EAAa,kCAC1C,OACI,gCACA,cAAC,EAAD,aAAUD,MAAOA,GAAWC,IAC5B,qBAAKE,UAAU,QAAQ6B,MAAOhC,EAAMiC,UAAYF,EAAOG,WAAaH,EAAOI,YAA3E,SACI,oBAAGhC,UAAU,OAAb,UACE,uBAAMA,UAAU,aAAhB,UAA6B,uBAAOK,MAAOR,EAAMoC,YAAY1B,MAAOC,SAAU,SAACC,GAAD,OAAKX,EAAQY,iBAAiBD,EAAEE,OAAON,MAAM,QAAS,kBAApI,IAAsJ,wBAAQF,QAAS,SAAAM,GAAC,OAAEX,EAAQoC,QAAQrC,EAAMsC,WAA1C,SAAqD,qBAAKnC,UAAU,MAAM0B,IAAI,wBACpO,uBAAOrB,MAAOR,EAAMoC,YAAYrB,MAAOJ,SAAU,SAACC,GAAD,OAAKX,EAAQY,iBAAiBD,EAAEE,OAAON,MAAM,QAAS,gBAAgBL,UAAU,eACjI,wBAAQG,QAAS,SAAAM,GAAC,OAAEX,EAAQsC,WAAWvC,EAAMsC,WAAWnC,UAAU,QAAlE,mBACA,wBAAQG,QAAS,SAAAM,GAAC,OAAEX,EAAQkB,gBAAgBnB,EAAMsC,WAAWnC,UAAU,SAAvE,yBAGN,cAAC,EAAD,aAAYH,MAAOA,GAAWC,IAC9B,6BACE,cAAC,IAAD,CACEuC,eAAgB,EAChBrC,UAAU,kBACVsC,gBAAgB,yBAHlB,UAIKzC,EAAM0C,OAA4B1C,EAAM2C,YAAzB3C,EAAMsB,YAAgCC,QAAO,SAAAC,GAAK,OAASA,EAAEC,KAAOzB,EAAMqB,WAAeG,EAAEC,KAAOzB,EAAMsC,YAAcZ,KAAI,SAACC,EAAKC,GAAN,OAC1I,qBAAgBzB,UAAU,YAA1B,UACE,uBAAMA,UAAU,QAAhB,UAAyBwB,EAAKjB,MAA9B,IAAqC,wBAAQP,UAAU,aAAaG,QAAS,SAAAM,GAAC,OAAEX,EAAQoC,QAAQV,EAAKF,KAAhE,SAAqE,qBAAKtB,UAAU,MAAM0B,IAAI,iBAAiBe,IAAI,cACxJ,sBAAMzC,UAAU,QAAhB,SAAyBwB,EAAKZ,QAC9B,wBAAQZ,UAAU,cAAcG,QAAS,SAAAM,GAAC,OAAIX,EAAQ4C,SAASlB,EAAKF,KAApE,kBACA,wBAAQtB,UAAU,cAAcG,QAAS,SAAAM,GAAC,OAAEX,EAAQkB,gBAAgBS,EAAOD,EAAKF,KAAhF,sBAJOG,c,eCpBRkB,EApBD,SAAC,GAAyB,IAAxB9C,EAAuB,EAAvBA,MAAUC,EAAa,yBACnC,OACI,8BACA,6BACE,cAAC,IAAD,CACEuC,eAAgB,EAChBrC,UAAU,kBACVsC,gBAAgB,yBAHlB,SAIGzC,EAAM+C,WAAWrB,KAAI,SAACC,EAAKC,GAAN,OACpB,qBAAgBzB,UAAU,aAA1B,UACE,sBAAMA,UAAU,QAAhB,SAAyBwB,EAAKjB,QAC9B,sBAAMP,UAAU,QAAhB,SAAyBwB,EAAKZ,QAC9B,wBAAQT,QAAS,SAAAM,GAAC,OAAEX,EAAQ+C,gBAAgBrB,EAAKF,KAAKtB,UAAU,iBAAhE,SAAiF,qBAAKA,UAAU,cAAc0B,IAAI,aAAae,IAAI,aAH5HhB,aCuNRqB,E,kDAxNb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDlD,MAAQ,CACX0C,OAAQ,KACRN,YAAa,CACX1B,MAAO,GACPK,MAAO,IAETN,MAAO,CACLC,MAAO,GACPK,MAAO,IAEToC,aAAc,CACZzC,MAAO,GACPK,MAAO,IAET4B,YAAa,GACbrB,WAAY,GACZpB,SAAS,EACTmB,UAAW,KACXY,WAAW,EACXK,SAAU,KACVS,WAAY,IAEd,EAAKxC,YAAc,EAAKA,YAAY6C,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKvC,iBAAmB,EAAKA,iBAAiBuC,KAAtB,gBACxB,EAAKnC,WAAa,EAAKA,WAAWmC,KAAhB,gBAClB,EAAKjC,gBAAkB,EAAKA,gBAAgBiC,KAArB,gBACvB,EAAKhC,UAAY,EAAKA,UAAUgC,KAAf,gBACjB,EAAKf,QAAU,EAAKA,QAAQe,KAAb,gBACf,EAAKP,SAAW,EAAKA,SAASO,KAAd,gBAChB,EAAKb,WAAa,EAAKA,WAAWa,KAAhB,gBAClB,EAAKJ,gBAAkB,EAAKA,gBAAgBI,KAArB,gBACvB,EAAKnD,QAAU,CACbM,YAAa,EAAKA,YAClBM,iBAAkB,EAAKA,iBACvBI,WAAY,EAAKA,WACjBE,gBAAiB,EAAKA,gBACtBC,UAAW,EAAKA,UAChBiB,QAAS,EAAKA,QACdQ,SAAU,EAAKA,SACfN,WAAY,EAAKA,WACjBS,gBAAiB,EAAKA,iBA3CR,E,qDA+ClB,WACE,IAAMM,EAAeC,aAAaC,QAAQ,SACpCT,EAAaU,KAAKC,MAAMJ,GACxBK,EAAcJ,aAAaC,QAAQ,QACnClC,EAAamC,KAAKC,MAAMC,GAC9BC,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEsB,WAAaA,GAAyB,GACtCyB,WAAaA,GAAyB,Q,yBAI1C,WACEa,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEE,SAAS,O,0BAGb,SAAaM,GACRA,EAAMsD,OAAS,EAChBF,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEE0C,OAAQlC,EACRmC,YAAaiB,KAAK5D,MAAMsB,WAAWC,QAAO,SAAAwC,GAAQ,OAAQA,EAAKrD,MAAMsD,SAASxD,IAAUuD,EAAKhD,MAAMiD,SAASxD,SAI9GoD,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEE0C,OAAQ,KACRC,YAAa,Q,8BAInB,SAAiBnC,EAAMyD,GAAkB,IAAbC,EAAY,uDAAR,QAC9BN,KAAKC,SAAL,2BACKD,KAAK5D,OADV,kBAEGkE,EAFH,2BAGON,KAAK5D,MAAMkE,IAHlB,kBAIKD,EAAMzD,S,wBAIb,WACE,IAAMc,EAAasC,KAAK5D,MAAMsB,WAC1BsC,KAAK5D,MAAMS,MAAMM,MAAM+C,OAAQ,GAAMF,KAAK5D,MAAMS,MAAMC,MAAMoD,OAAQ,GACxExC,EAAW6C,QAAX,aACE1C,GAAI2C,KAAKC,OACNT,KAAK5D,MAAMS,QAEhBmD,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEsB,WAAYA,EACZb,MAAM,2BACDmD,KAAK5D,MAAMS,OADX,IAEHC,MAAM,GACNK,MAAO,KAETb,SAAS,KAEXqD,aAAae,QAAQ,OAAOb,KAAKc,UAAUjD,KAGzCsC,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEE,SAAS,O,6BAIf,SAAgBsE,EAAE/C,GAChB,IAAI0B,EAAeS,KAAK5D,MAAMsB,WAAWC,QAAO,SAAAI,GAAS,OAAOA,EAAKF,KAAOA,KAAK,GAC3EsB,EAAaa,KAAK5D,MAAM+C,WAC9BA,EAAWoB,QAAQhB,GACnBS,KAAKC,SAAS,CACZd,WAAYA,IAEd,IAAMzB,EAAasC,KAAK5D,MAAMsB,WAAWC,QAAO,SAACwC,EAAKnC,GAAW,OAAOA,IAAU4C,KAC/EZ,KAAK5D,MAAMqB,UACduC,KAAKC,SAAS,CACZvC,WAAYA,EACZD,UAAW,OAGXuC,KAAKC,SAAS,CACZ5B,WAAW,EACXX,WAAYA,IAGhBiC,aAAae,QAAQ,OAAQb,KAAKc,UAAUjD,IAC5CiC,aAAae,QAAQ,QAAQb,KAAKc,UAAUxB,M,qBAE9C,SAAQtB,GACNmC,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEqB,UAAWI,O,uBAGf,WACEmC,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEqB,UAAW,U,sBAGf,SAASI,GACP,IAAIW,EAAcwB,KAAK5D,MAAMsB,WAAWC,QAAO,SAAAI,GAAO,OAAOA,EAAKF,KAAOA,KAAK,GAC9EmC,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEoC,cACAH,WAAW,EACXK,SAAUb,O,wBAGd,SAAWA,GACT,IAAIsC,EAAOH,KAAK5D,MAAMoC,YAClBqC,EAA0D,IAAjCb,KAAK5D,MAAMsB,WAAWwC,OACnDF,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEEsB,WAAamD,EAAyB,CAAC,aAAChD,MAAOsC,IAAZ,cAAuBtC,MAAOsC,IAA9B,mBAAwCH,KAAK5D,MAAMsB,WAAWC,QAAO,SAAAI,GAAI,OAAEA,EAAKF,KAAKA,OACxHW,YAAa,CACX1B,MAAO,GACPK,MAAO,IAETkB,WAAW,EACXK,SAAU,U,6BAGd,SAAgBb,GACd,IAAMsB,EAAaa,KAAK5D,MAAM+C,WAAWxB,QAAO,SAACI,GAAW,OAAQA,EAAKF,KAAOA,KAChFmC,KAAKC,SAAL,2BACKD,KAAK5D,OADV,IAEE+C,WAAYA,O,oBAIhB,WAAU,IAAD,OACHhB,EAAS,CACXG,WAAY,CACVwC,QAAS,QAEXvC,YAAa,CACXuC,QAAS,SAGb,OAEE,gCACE,sBAAKvE,UAAU,SAAf,UACA,mBAAGwE,KAAK,kCAAR,SAA0C,qBAAK9C,IAAI,mDAAmDe,IAAI,WACxG,0CACD,uBAAOzC,UAAU,SAASC,KAAK,OAAOC,YAAY,SAASG,MAAOoD,KAAK5D,MAAM0C,OAASkB,KAAK5D,MAAM0C,OAAS,GAAI/B,SAAU,SAACC,GAAD,OAAK,EAAKyC,aAAazC,EAAEE,OAAON,aAEzJ,uBACA,qBAAKL,UAAU,UAAf,SACE,eAAC,IAAD,WACE,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CAAMyE,GAAG,IAAIzE,UAAU,WAAvB,SAAkC,qBAAKyC,IAAI,OAAOzC,UAAU,OAAO0B,IAAI,iBACvE,cAAC,IAAD,CAAM+C,GAAG,SAASzE,UAAU,YAA5B,SAAwC,qBAAKyC,IAAI,QAAQzC,UAAU,QAAQ0B,IAAI,mBAEjF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAI,cAAC,EAAD,aAAM/E,MAAO,EAAKA,MAAO+B,OAAQA,GAAY,EAAK9B,aACpF,cAAC,IAAD,CAAO6E,KAAK,SAASC,OAAQ,kBAAI,cAAC,EAAD,aAAO/E,MAAO,EAAKA,MAAO+B,OAAQA,GAAY,EAAK9B,4B,GAhNhF+E,IAAMC,WCETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e1355660.chunk.js","sourcesContent":["import React from 'react';\n\nconst TakeNote = ({state, ...actions}) => {\n    return(\n        <div>\n        {\n            state.visible === false\n            ?\n            <div className=\"take-notes1\">\n              <input type=\"text\" placeholder=\"Take a note...\" onClick={actions.handleClick} className=\"initial\" value={state.notes.title} onChange={()=>null}/>\n            </div>\n            :\n            <div className=\"take-notes2\">\n              <input type=\"text\" value={state.notes.title} placeholder=\"Title\" className=\"title\" onChange={(e)=>actions.handleChangeNote(e.target.value,\"title\")}/><br></br>\n              <input type=\"text\" value={state.notes.input} placeholder=\"Take a note...\" onChange={(e)=>actions.handleChangeNote(e.target.value,\"input\")} className=\"take-note\" autoFocus=\"autofocus \" /> \n              <button onClick={actions.addToNotes}>close</button>\n              \n            </div>\n        }\n        </div>\n    );\n}\n\nexport default TakeNote;","import React from 'react';\nimport Masonry from 'react-masonry-css';\nimport TakeNote from './TakeNote';\n\nconst PinnedNote = ({state, removeFromNotes, removePin}) => {\n    if(state.pinned_id){\n      return (\n      <div className=\"pinned\">\n        <h4>Pinned</h4>\n        {state.notes_list.filter(n=>{ return n.id === state.pinned_id }).map((item,index)=>\n        <p key={index} className=\"list-item\" id=\"li\">\n          <span className=\"span1\">{item.title} <button className=\"pin-button\" onClick={e=>removePin(item.id)}><img className=\"pin\" src=\"./push-pin.png\"/></button></span> \n          <span className=\"span2\">{item.input}</span>\n          <button className=\"list-button\" onClick={e=>removeFromNotes(index,item.id)}>delete</button>\n        </p>\n        )}\n        <hr></hr>\n      </div>\n      );\n    }\n    else {\n        return null;\n    }\n}\nconst Home = ({state, styles, ...actions}) => {\n    return(\n        <div>\n        <TakeNote state={state} {...actions} />\n        <div className=\"popup\" style={state.showPopUp ? styles.inputStyle : styles.inputStyle1}>\n            <p className=\"text\" >\n              <span className=\"edit-title\"><input value={state.edited_note.title} onChange={(e)=>actions.handleChangeNote(e.target.value,\"title\", \"edited_note\")}/> <button onClick={e=>actions.pinNote(state.popUp_id)}><img className=\"pin\" src=\"./push-pin.png\"/></button></span>\n              <input value={state.edited_note.input} onChange={(e)=>actions.handleChangeNote(e.target.value,\"input\", \"edited_note\")} className=\"edit-input\" />\n              <button onClick={e=>actions.updateNote(state.popUp_id)} className=\"close\">close</button>\n              <button onClick={e=>actions.removeFromNotes(state.popUp_id)} className=\"delete\">delete</button>\n            </p>\n        </div>\n        <PinnedNote state={state} {...actions}/>\n        <ul>\n          <Masonry\n            breakpointCols={4}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n            {(!state.search ? state.notes_list : state.search_list).filter(n=>{ return ((n.id !== state.pinned_id) && (n.id !== state.popUp_id)) }).map((item,index)=>\n              <li key={index} className=\"list-item\" >\n                <span className=\"span1\">{item.title} <button className=\"pin-button\" onClick={e=>actions.pinNote(item.id)}><img className=\"pin\" src=\"./push-pin.png\" alt=\"icon\"/></button></span> \n                <span className=\"span2\">{item.input}</span> \n                <button className=\"list-button\" onClick={e => actions.showNote(item.id)}>Edit</button>\n                <button className=\"list-button\" onClick={e=>actions.removeFromNotes(index, item.id)}>Delete</button></li>)}\n          </Masonry>\n        </ul>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport Masonry from 'react-masonry-css';\n\nconst Trash = ({state, ...actions}) => {\n    return(\n        <div>\n        <ul>\n          <Masonry\n            breakpointCols={4}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n            {state.trash_list.map((item,index)=>\n              <li key={index} className=\"trash-item\" >\n                <span className=\"span1\">{item.title}</span> \n                <span className=\"span2\">{item.input}</span> \n                <button onClick={e=>actions.removeFromTrash(item.id)} className=\"delete-forever\"><img className=\"del-forever\" src=\"./del1.png\" alt=\"icon\"/></button>\n              </li>)}\n          </Masonry>\n        </ul>\n        </div>\n    );\n}\n\nexport default Trash;","import React from 'react';\nimport Home from './Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Trash from './Trash';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      search: null,\n      edited_note: {\n        title: \"\",\n        input: \"\"\n      },\n      notes: {\n        title: \"\",\n        input: \"\"\n      },\n      deleted_note: {\n        title: \"\",\n        input: \"\"\n      },\n      search_list: [],\n      notes_list: [], \n      visible: false,\n      pinned_id: null,\n      showPopUp: false,\n      popUp_id: null,\n      trash_list: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleChangeNote = this.handleChangeNote.bind(this);\n    this.addToNotes = this.addToNotes.bind(this);\n    this.removeFromNotes = this.removeFromNotes.bind(this);\n    this.removePin = this.removePin.bind(this);\n    this.pinNote = this.pinNote.bind(this);\n    this.showNote = this.showNote.bind(this);\n    this.updateNote = this.updateNote.bind(this);\n    this.removeFromTrash = this.removeFromTrash.bind(this);\n    this.actions = {\n      handleClick: this.handleClick,\n      handleChangeNote: this.handleChangeNote,\n      addToNotes: this.addToNotes,\n      removeFromNotes: this.removeFromNotes,\n      removePin: this.removePin,\n      pinNote: this.pinNote,\n      showNote: this.showNote,\n      updateNote: this.updateNote,\n      removeFromTrash: this.removeFromTrash\n    };\n  }\n\n  componentDidMount() {\n    const trash_string = localStorage.getItem('trash');\n    const trash_list = JSON.parse(trash_string);\n    const list_string = localStorage.getItem('list');\n    const notes_list = JSON.parse(list_string);\n    this.setState({\n      ...this.state,\n      notes_list: (notes_list? notes_list : []),\n      trash_list: (trash_list? trash_list : [])\n    });\n  }\n\n  handleClick(){\n    this.setState({\n      ...this.state,\n      visible: true\n    });\n  }\n  handleSearch(value){\n    if(value.length > 0) {\n      this.setState({\n        ...this.state,\n        search: value,\n        search_list: this.state.notes_list.filter(note=>{ return (note.title.includes(value) || note.input.includes(value))})\n      });\n    }\n    else {\n      this.setState({\n        ...this.state,\n        search: null,\n        search_list: []\n      });\n    }\n  }\n  handleChangeNote(value,key, obj=\"notes\"){\n    this.setState({\n      ...this.state,\n      [obj]: {\n        ...this.state[obj],\n        [key]: value\n      }\n    });\n  }\n  addToNotes() {\n    const notes_list = this.state.notes_list;\n    if((this.state.notes.input.length)>0 || (this.state.notes.title.length)>0){\n    notes_list.unshift({\n      id: Date.now(),\n      ...this.state.notes\n    });\n    this.setState({\n      ...this.state,\n      notes_list: notes_list,\n      notes: {\n        ...this.state.notes,\n        title:\"\",\n        input: \"\"\n      },\n      visible: false\n    });\n    localStorage.setItem(\"list\",JSON.stringify(notes_list));\n    }\n    else{\n      this.setState({\n        ...this.state,\n        visible: false\n      });\n    }\n  }\n  removeFromNotes(i,id) {\n    let deleted_note = this.state.notes_list.filter(item => {return item.id === id})[0];\n    const trash_list = this.state.trash_list;\n    trash_list.unshift(deleted_note);\n    this.setState({\n      trash_list: trash_list\n    });\n    const notes_list = this.state.notes_list.filter((note,index)=> { return index !== i; });\n    if(this.state.pinned_id){\n    this.setState({\n      notes_list: notes_list,\n      pinned_id: null\n    });}\n    else{\n      this.setState({\n        showPopUp: false,\n        notes_list: notes_list,\n      });\n    }\n    localStorage.setItem(\"list\", JSON.stringify(notes_list));\n    localStorage.setItem(\"trash\",JSON.stringify(trash_list));\n  }\n  pinNote(id) {\n    this.setState({\n      ...this.state,\n      pinned_id: id\n    });\n  }\n  removePin() {\n    this.setState({\n      ...this.state,\n      pinned_id: null\n    });\n  }  \n  showNote(id) {\n    let edited_note = this.state.notes_list.filter(item=>{return item.id === id})[0];\n    this.setState({\n      ...this.state,\n      edited_note,\n      showPopUp: true,\n      popUp_id: id\n    });\n  }\n  updateNote(id) {\n    let note = this.state.edited_note;\n    let containsOnlyOneElement = this.state.notes_list.length === 1;\n    this.setState({\n      ...this.state, \n      notes_list: (containsOnlyOneElement ? [{id, ...note}] : [{id, ...note}, ...this.state.notes_list.filter(item=>item.id!==id)]),\n      edited_note: {\n        title: \"\",\n        input: \"\"\n      },\n      showPopUp: false,\n      popUp_id: null\n    });\n  }\n  removeFromTrash(id) {\n    const trash_list = this.state.trash_list.filter((item) => { return  item.id !== id});\n    this.setState({\n      ...this.state,\n      trash_list: trash_list\n    });\n  }\n\n  render() {\n    let styles = {\n      inputStyle: {\n        display: 'flex'\n      }, \n      inputStyle1: {\n        display: 'none'\n      }\n    };\n    return(\n     \n      <div>\n        <div className=\"header\">\n        <a href=\"https://github.com//Ashutosh102\"><img src=\"https://img.icons8.com/nolan/256/google-keep.png\" alt=\"logo\"/></a>\n          <h3>DevNotes</h3>\n         <input className=\"search\" type=\"text\" placeholder=\"Search\" value={this.state.search ? this.state.search : \"\"} onChange={(e)=>this.handleSearch(e.target.value)}/>\n        </div>\n        <hr></hr>\n        <div className=\"content\">\n          <Router>\n            <div className=\"navigation\"> \n              <Link to=\"/\" className=\"nav-home\"><img alt=\"home\" className=\"home\" src=\"./note.png\"/></Link>\n              <Link to=\"/trash\" className=\"nav-trash\"><img alt=\"trash\" className=\"trash\" src=\"./del.png\"/></Link>\n            </div>\n            <Switch>\n              <Route exact path=\"/\" render={()=><Home state={this.state} styles={styles} {...this.actions}/>}/>\n              <Route path=\"/trash\" render={()=><Trash state={this.state} styles={styles} {...this.actions}/>}/>\n            </Switch>\n          </Router>\n        </div>\n       </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}